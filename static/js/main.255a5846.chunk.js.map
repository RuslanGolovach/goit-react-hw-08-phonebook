{"version":3,"sources":["redux/auth/auth-reducer.js","redux/store.js","components/Container/Container.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/userAvatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","components/PreLoader/PreLoader.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js"],"names":["initialUserState","name","email","user","createReducer","authActions","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","combineReducers","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","styles","state","connect","authSelectors","to","exact","NavLink","activeClassName","NavLink_Active","mapDispatchToProps","onLogout","authOperations","logOut","avatar","userAvatar","src","alt","width","Avatar","Name","BtnLogout","type","onClick","AuthNav","NavLinkAuth","NavLinkAuth_Active","Header","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","LoginView","RegisterView","ContactsView","App","this","onGetCurrentUser","fallback","PreLoader","path","getCurrentUser","ReactDOM","StrictMode","loading","document","getElementById","module","exports","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","message","logoutRequest","logIn","loginRequest","getState","persistedToken","getCurrentUserRequest","get","createAction","fetchContacts","fetchContactsRequest","then","fetchContactsSuccess","catch","fetchContactsError","addContact","number","contact","addContactRequest","addContactSuccess","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","items","filter","changeFilter","color","height"],"mappings":"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","file":"static/js/main.255a5846.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nconst getUsername = state => state.auth.user.name;\r\n// eslint-disable-next-line\r\nexport default { getIsAuthenticated, getUsername };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink\r\n      to=\"/\"\r\n      exact\r\n      className={styles.NavLink}\r\n      activeClassName={styles.NavLink_Active}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        className={styles.NavLink}\r\n        activeClassName={styles.NavLink_Active}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/userAvatar.a6143582.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport userAvatar from './userAvatar.png';\r\nimport styles from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={styles.Container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" className={styles.Avatar} />\r\n    <span className={styles.Name}>Welcome, {name}!</span>\r\n    <button className={styles.BtnLogout} type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state),\r\n  avatar: userAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className={styles.NavLinkAuth}\r\n      activeClassName={styles.NavLinkAuth_Active}\r\n    >\r\n      Sign Up\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className={styles.NavLinkAuth}\r\n      activeClassName={styles.NavLinkAuth_Active}\r\n    >\r\n      Log In\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.Header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Container from './components/Container';\nimport authOperations from './redux/auth/auth-operations';\nimport AppBar from './components/AppBar';\n// import ContactsView from './views/ContactsView';\n// import LoginView from './views/LoginView';\n// import RegisterView from './views/RegisterView';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport PreLoader from './components/PreLoader';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<PreLoader />}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLink\":\"Navigation_NavLink__QgJby\",\"NavLink_Active\":\"Navigation_NavLink_Active__1-cGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserMenu_Container__1WFkf\",\"Avatar\":\"UserMenu_Avatar__3kXbz\",\"Name\":\"UserMenu_Name__1N1kP\",\"BtnLogout\":\"UserMenu_BtnLogout__1Zqt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinkAuth\":\"AuthNav_NavLinkAuth__3lu9Z\",\"NavLinkAuth_Active\":\"AuthNav_NavLinkAuth_Active__3gJhR\"};","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n// eslint-disable-next-line\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n    axios\r\n      .post('/contacts', contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch(error => dispatch(addContactError(error.message)));\r\n  };\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n// eslint-disable-next-line\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst PreLoader = () => {\r\n  return (\r\n    <div>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreLoader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2mBa4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"AppBar_Header__36Tzz\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n"],"sourceRoot":""}