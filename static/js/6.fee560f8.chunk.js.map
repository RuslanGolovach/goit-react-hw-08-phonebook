{"version":3,"sources":["views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","styles","TitleRegister","FormRegister","onSubmit","style","form","autoComplete","label","InputRegister","type","placeholder","onChange","BtnRegistet","Component","connect","dispatch","data","authOperations","register"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,aAAe,mCAAmC,cAAgB,oCAAoC,YAAc,oC,2KCIpLC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,gCACE,oBAAIW,UAAWC,IAAOC,cAAtB,qBAEA,uBACEF,UAAWC,IAAOE,aAClBC,SAAUL,KAAKL,aACfW,MAAOJ,IAAOK,KACdC,aAAa,KAJf,UAME,uBAAOF,MAAOJ,IAAOO,MAArB,SACE,uBACER,UAAWC,IAAOQ,cAClBC,KAAK,OACLvB,KAAK,OACLwB,YAAY,OACZnB,MAAOL,EACPyB,SAAUb,KAAKT,iBAInB,uBAAOe,MAAOJ,IAAOO,MAArB,SACE,uBACER,UAAWC,IAAOQ,cAClBC,KAAK,QACLvB,KAAK,QACLwB,YAAY,QACZnB,MAAOJ,EACPwB,SAAUb,KAAKT,iBAInB,uBAAOe,MAAOJ,IAAOO,MAArB,SACE,uBACER,UAAWC,IAAOQ,cAClBC,KAAK,WACLvB,KAAK,WACLwB,YAAY,WACZnB,MAAOH,EACPuB,SAAUb,KAAKT,iBAInB,wBAAQU,UAAWC,IAAOY,YAAaH,KAAK,SAA5C,+B,GAjEiBI,aAyFZC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtClB,WAAY,SAAAmB,GAAI,OAAID,EAASE,IAAeC,SAASF,QAGxCF,CAAkC9B","file":"static/js/6.fee560f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleRegister\":\"RegisterView_TitleRegister__9rPDr\",\"FormRegister\":\"RegisterView_FormRegister__3RgnX\",\"InputRegister\":\"RegisterView_InputRegister__NfPGC\",\"BtnRegistet\":\"RegisterView_BtnRegistet__3yjiU\"};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport styles from './RegisterView.module.css';\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1 className={styles.TitleRegister}>SIGN UP</h1>\r\n\r\n        <form\r\n          className={styles.FormRegister}\r\n          onSubmit={this.handleSubmit}\r\n          style={styles.form}\r\n          autoComplete=\"on\"\r\n        >\r\n          <label style={styles.label}>\r\n            <input\r\n              className={styles.InputRegister}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            <input\r\n              className={styles.InputRegister}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label style={styles.label}>\r\n            <input\r\n              className={styles.InputRegister}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.BtnRegistet} type=\"submit\">\r\n            Sing Up\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\n * 1-й вариант\r\n */\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register,\r\n// };\r\n\r\n/*\r\n * 2-й вариант\r\n */\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRegister: data => dispatch(authOperations.register(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}